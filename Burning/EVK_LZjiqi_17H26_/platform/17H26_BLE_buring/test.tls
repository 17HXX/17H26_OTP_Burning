config[14] = 1                          # set color mode.
config[0] = 1		                        # debug level 0~3  	
config[15]= 13                          #swire speed
config[2]=  3		                        # id mode: 3 for rolling id
config[18] = 500                        #fastload offset time unit£ºms
config[23] = 1					                #no test mode 3v3dut electrical level      1£º3V3        0£ºoff
reg_write(0x73,0)                       # must
#config led by yourself
#led_state(0x00,0x00,0x00,0x00,0x00) 
#led_state(0x00,0x09,0x08,0x01,0x08)
#led_state(0x00,0x00,0x05,0x0a,0x00)  
led_state(0x00,0x09,0x08,0x02,0x04)    


#Add random delay to avoid RF interference
#rand_delay(60000)
rand_delay(60000)


#GPIO test
repeat(0)
begin
fast_load(dut_5318_gpio.bin,1,4)
gpio(...)   #reference:remington_gpio_map.txt
end


#RF trx test
repeat(0)
begin
#config[33] = 0xd8   #if EVK has frequency compensation,add freoff adjust
fast_load(dut_5318_rf.bin,1,4)
rx_test(200,160,-60,168)
tx_test(200,160,-60,-80,80,168)
rx_test(200,160,-60,168)
tx_test(200,160,-60,-80,80,168)
rf_check(2)
end





fast_load(dut_5318_otp.bin,1,4)
#rand_delay(6000)
ext_vpp()
#rand_delay(60000)

##########################################################################
write(17H26_Lenze_ARGun_3432_171206.bin,0,0,3)  		#otp write firmware
##########################################################################

write_bytes(0x3fe8,0xfe,1,0,3)  						#write freq_offset  config

write_id(0x3fe0,4,0,3)														  	#otp write id
write_bytes(0x3ff0,0x060298bf,4,0,3)  						
write_bytes(0x3ff4,0x060301bf,4,0,3)   
write_bytes(0x3ff8,0x0000f83f,4,0,3)
write_bytes(0x3fee,0x0f,1,0,3)



fast_load(dut_5318_otp_normal_check.bin,1,4)

##########################################################################
write(17H26_Lenze_ARGun_3432_171206.bin,0,2,3) 		 #otp check firmware
##########################################################################

write_bytes(0x3fe8,0xfe,1,2,3)  					 #write freq_offset  config	  check

write_id(0x3fe0,4,4,3)	  	  						 #otp normal read id check
write_bytes(0x3ff0,0x060298bf,4,2,3) 
write_bytes(0x3ff4,0x060301bf,4,2,3)   
write_bytes(0x3ff8,0x0000f83f,4,2,3)
write_bytes(0x3fee,0x0f,1,2,3)



stop()
